{
    "error": {
        "message": "refinement type error",
        "file": "src/collections/ring_buffer.rs",
        "row": 114,
        "col": 13,
        "raw": "error[E0999]: refinement type error\n   --> kernel/src/collections/ring_buffer.rs:114:13\n    |\n114 |             true\n    |             ^^^^ a postcondition cannot be proved\n    |\nnote: this is the condition that cannot be proved\n   --> kernel/src/collections/ring_buffer.rs:99:22\n    |\n99  |                      if full(old) { old.hd == new.hd && old.tl == new.tl } else { true }\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
        "function_context": {
            "start": 106,
            "end": 116,
            "name": "enqueue",
            "constraint_files": [
                "/Users/cole/git/flux-diagnose/ringbuffer-diagnostics/c76c03f48/all_constraints/kernel.collections-ring_buffer-{impl#1}-enqueue.simp.sub.fluxc",
                "/Users/cole/git/flux-diagnose/ringbuffer-diagnostics/c76c03f48/all_constraints/kernel.collections-ring_buffer-{impl#1}-enqueue.sub.fluxc",
                "/Users/cole/git/flux-diagnose/ringbuffer-diagnostics/c76c03f48/all_constraints/kernel.collections-ring_buffer-{impl#1}-enqueue.simp.fluxc",
                "/Users/cole/git/flux-diagnose/ringbuffer-diagnostics/c76c03f48/all_constraints/kernel.collections-ring_buffer-{impl#1}-enqueue.fluxc",
                "/Users/cole/git/flux-diagnose/ringbuffer-diagnostics/c76c03f48/all_constraints/kernel.collections-ring_buffer-{impl#1}-enqueue.smt2"
            ],
            "rendered_context": "106:     //\n107:     fn enqueue(&mut self, val: T) -> bool {\n108:         if self.is_full() {\n109:             // Incrementing tail will overwrite head\n110:             false\n111:         } else {\n112:             self.ring[self.tail] = val;\n113:             self.tail = (self.tail + 1) % self.ring.len();\n114:             true\n115:         }\n116:     }\n"
        },
        "unique_name": "enqueue-L114-1"
    },
    "fix": {
        "seen_before": true
    }
}