{
  "error": {
    "message1": "error[E0999]: refinement type error\n   --> src/vec_deque.rs:126:9\n    |\n126 |         wrap_index(idx.wrapping_add(addend), self.cap())\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved\n    |\nnote: this is the condition that cannot be proved\n   --> src/vec_deque.rs:30:40\n    |\n30  | #[flux::alias(type Size = usize{v: pow2(v) && 1<=v })]\n    |                                        ^^^\n\n",
    "message2": "error[E0999]: failed to verify predicate: \"pow2(a4)\"\n              blamed variable: \"Some(a4)\"\n              related variables: [{\"name\": \"a4\", \"depth\": 4, \"origin\": \"(CallReturn, Some(src/vec_deque.rs:126:46: 126:56 (#0)))\"}]\n   --> src/vec_deque.rs:126:9\n    |\n126 |         wrap_index(idx.wrapping_add(addend), self.cap())\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: related variable `a4 (depth 4)` defined here with originator `CallReturn`\n   --> src/vec_deque.rs:126:46\n    |\n126 |         wrap_index(idx.wrapping_add(addend), self.cap())\n    |                                              ^^^^^^^^^^\n\n",
    "file": "/home/cole/research/flux-examples/kani-vecdeque/src/vec_deque.rs",
    "row": 126,
    "col": 9,
    "raw1": "error[E0999]: refinement type error\n   --> src/vec_deque.rs:126:9\n    |\n126 |         wrap_index(idx.wrapping_add(addend), self.cap())\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved\n    |\nnote: this is the condition that cannot be proved\n   --> src/vec_deque.rs:30:40\n    |\n30  | #[flux::alias(type Size = usize{v: pow2(v) && 1<=v })]\n    |                                        ^^^\n\n",
    "raw2": "error[E0999]: failed to verify predicate: \"pow2(a4)\"\n              blamed variable: \"Some(a4)\"\n              related variables: [{\"name\": \"a4\", \"depth\": 4, \"origin\": \"(CallReturn, Some(src/vec_deque.rs:126:46: 126:56 (#0)))\"}]\n   --> src/vec_deque.rs:126:9\n    |\n126 |         wrap_index(idx.wrapping_add(addend), self.cap())\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: related variable `a4 (depth 4)` defined here with originator `CallReturn`\n   --> src/vec_deque.rs:126:46\n    |\n126 |         wrap_index(idx.wrapping_add(addend), self.cap())\n    |                                              ^^^^^^^^^^\n\n",
    "predicate": "pow2(a4)",
    "blamed_variable": "Some(a4)",
    "related_variables": [
      {
        "name": "a4",
        "depth": 4,
        "origin": "(CallReturn, Some(src/vec_deque.rs:126:46: 126:56 (#0)))"
      }
    ],
    "parsing_error": null,
    "function_context": {
      "start": 124,
      "end": 127,
      "name": "wrap_add",
      "constraint_files": [],
      "rendered_context": "\nFunction context (/home/cole/research/flux-examples/kani-vecdeque/src/vec_deque.rs:124-127):\nFunction name: wrap_add\n---------------------------------------------------------------------------------------------\n 124:            #[inline]\n 125:            fn wrap_add(&self, idx: usize, addend: usize) -> usize {\n 126: error>         wrap_index(idx.wrapping_add(addend), self.cap())\n 127:            }\n"
    },
    "unique_name": "wrap_add-L126-0"
  },
  "fix": {
    "certainty": true,
    "err_type": "2a",
    "fix_description": {
      "fix_type": "additional_refinement",
      "description": "cap needs pow2 on output"
    },
    "seen_before": false,
    "blamed_variable_correct": true,
    "variables_to_change": [
      {
        "name": "a4",
        "depth": 4,
        "origin": "(CallReturn, Some(src/vec_deque.rs:126:46: 126:56 (#0)))"
      }
    ],
    "anything_missing": false,
    "missing_info": null,
    "additional_notes": null
  }
}